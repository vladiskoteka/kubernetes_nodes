---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  # - name: Install containerd.io #,docker and its dependecies
  #   apt: 
  #     name: "{{ packages }}"
  #     state: present
  #     update_cache: yes
  #   vars:
  #     packages:
  #       - containerd.io
    #    - docker-ce 
    #    - docker-ce-cli 
    #  notify:
    #    - docker status

  # - name: Add vagrant user to docker group
  #   user:
  #     name: vagrant
  #     group: docker
  - name: Add module overlay
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter
    
  - name: Create file containerd.conf
    copy:
      dest: "/etc/modules-load.d/containerd.conf"
      content: |
        overlay
        br_netfilter

  - name: Create file 99-kubernetes-cri.conf
    copy: 
      dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1

  - name: Apply sysctl params without reboot
    shell: sysctl --system
    become: yes
  
  - name: Install containerd
    apt: 
      update_cache: yes 
      force_apt_get: yes
      pkg:
        containerd
        #state: present

  - name: Ensure /etc/containerd exist
    file: path=/etc/containerd state=directory

  # - name: shell
  #   shell: containerd config default | sudo tee /etc/containerd/config.toml
  #   become: yes

  # - name: edit /etc/containerd/config.toml
  #   lineinfile:
  #     path: /etc/containerd/config.toml
  #     regexp: "privileged_without_host_devices = false"
  #     insertafter: '^false'
  #     line: SystemdCgroup = true #'{{ item.line }}'
    #with_items:
      #- [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
      #- SystemdCgroup = true

  - name: copy config.toml    
    copy:
      src: /home/vladiskoteka/Desktop/kube_getting/config.toml
      dest: /etc/containerd/config.toml
      owner: vagrant
      group: vagrant
      mode: '0644'


  - name: restart containerd
    ansible.builtin.systemd:
      state: restarted
      daemon_reload: yes
      name: containerd

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        #- kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      insertafter: 'kubernetes/kubelet.conf'
      line: "Environment=KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
  
  # - name: wait 30 sec
  #   wait_for:
  #     timeout: 30
    
  - name: add to kube master
    shell: "{{ kubernetes_token }}"
    become: yes

